# Configurazione SIGMA-NEX per Produzione
# ================================================
# Questo file di configurazione è ottimizzato per ambienti di produzione.
# Per ambienti di sviluppo, utilizzare config.yaml

# ===========================================
# CONFIGURAZIONE MODELLO AI
# ===========================================
model_name: "mistral"
temperature: 0.5              # Più conservativo per produzione
max_tokens: 2048
context_window: 8192
model_timeout: 30             # Timeout più lungo per produzione

# ===========================================
# CONFIGURAZIONE SISTEMA
# ===========================================
debug: false                 # SEMPRE false in produzione
log_level: "INFO"            # INFO o WARNING per produzione
retrieval_enabled: true
max_history: 50              # Limitato per performance
request_timeout: 60
max_concurrent_requests: 10

# ===========================================
# CONFIGURAZIONE SICUREZZA
# ===========================================
security_mode: "strict"
encryption_enabled: true
ip_whitelist_enabled: true
ip_whitelist:
  - "127.0.0.1"
  - "::1"
  - "192.168.1.0/24"        # Personalizza per la tua rete

rate_limiting:
  enabled: true
  requests_per_minute: 60
  burst_limit: 10

audit_logging:
  enabled: true
  log_file: "logs/audit.log"
  retention_days: 90

# ===========================================
# CONFIGURAZIONE SERVER
# ===========================================
server:
  host: "0.0.0.0"            # Solo se necessario, altrimenti 127.0.0.1
  port: 8000
  workers: 4                # Adatta al numero di CPU
  worker_timeout: 300       # 5 minuti
  keepalive: 65
  max_requests: 1000        # Restart worker dopo N requests
  max_requests_jitter: 100

# SSL/TLS (se configurato)
ssl:
  enabled: false            # Impostare a true se usi HTTPS
  cert_file: "/path/to/cert.pem"
  key_file: "/path/to/key.pem"
  verify_mode: "required"

# ===========================================
# CONFIGURAZIONE DATABASE E CACHE
# ===========================================
database:
  type: "sqlite"            # o "postgresql" per setups più grandi
  path: "data/sigma_production.db"
  connection_pool_size: 20
  connection_timeout: 30
  
# Cache Redis (opzionale)
cache:
  enabled: false
  redis_url: "redis://localhost:6379/0"
  default_ttl: 3600        # 1 ora
  max_connections: 20

# ===========================================
# CONFIGURAZIONE TRADUZIONE
# ===========================================
translation:
  enabled: true
  default_source: "auto"
  default_target: "it"
  cache_translations: true
  model_path: "sigma_nex/core/models/translate"

# ===========================================
# CONFIGURAZIONE RETRIEVAL SEMANTICO
# ===========================================
retrieval:
  enabled: true
  index_path: "data/moduli.index"
  mapping_path: "data/moduli.mapping.json"
  top_k: 5                 # Risultati per query
  score_threshold: 0.7     # Soglia similarità
  max_context_length: 2000

# ===========================================
# CONFIGURAZIONE LOGGING
# ===========================================
logging:
  version: 1
  disable_existing_loggers: false
  
  formatters:
    standard:
      format: "%(asctime)s [%(levelname)s] %(name)s: %(message)s"
    detailed:
      format: "%(asctime)s [%(levelname)s] %(name)s [%(filename)s:%(lineno)d]: %(message)s"
  
  handlers:
    console:
      class: "logging.StreamHandler"
      level: "INFO"
      formatter: "standard"
      stream: "ext://sys.stdout"
    
    file:
      class: "logging.handlers.RotatingFileHandler"
      level: "INFO"
      formatter: "detailed"
      filename: "logs/sigma_production.log"
      maxBytes: 52428800     # 50MB
      backupCount: 5
    
    error_file:
      class: "logging.handlers.RotatingFileHandler"
      level: "ERROR"
      formatter: "detailed"
      filename: "logs/sigma_errors.log"
      maxBytes: 10485760     # 10MB
      backupCount: 3
  
  loggers:
    sigma_nex:
      level: "INFO"
      handlers: ["console", "file", "error_file"]
      propagate: false
    
    uvicorn:
      level: "INFO"
      handlers: ["console", "file"]
      propagate: false

# ===========================================
# CONFIGURAZIONE MONITORING
# ===========================================
monitoring:
  enabled: true
  metrics_enabled: true
  health_check_interval: 30  # secondi
  
  # Prometheus metrics (se configurato)
  prometheus:
    enabled: false
    port: 9090
    path: "/metrics"
  
  # Health checks
  health_checks:
    - name: "ollama_connection"
      enabled: true
      interval: 60
    - name: "disk_space"
      enabled: true
      interval: 300
      threshold_gb: 1       # Alert se < 1GB liberi
    - name: "memory_usage"
      enabled: true
      interval: 60
      threshold_percent: 90  # Alert se > 90% memoria

# ===========================================
# CONFIGURAZIONE BACKUP
# ===========================================
backup:
  enabled: true
  schedule: "0 2 * * *"     # Ogni giorno alle 2:00
  retention_days: 30
  
  targets:
    - type: "database"
      source: "data/sigma_production.db"
      destination: "backups/db/"
    
    - type: "config"
      source: "config_production.yaml"
      destination: "backups/config/"
    
    - type: "logs"
      source: "logs/"
      destination: "backups/logs/"
      compression: true

# ===========================================
# CONFIGURAZIONE PERFORMANCE
# ===========================================
performance:
  # Garbage collection tuning
  gc_threshold: [700, 10, 10]
  
  # Memory limits
  max_memory_mb: 4096       # 4GB limit
  memory_check_interval: 300
  
  # Connection pooling
  connection_pool:
    min_size: 5
    max_size: 20
    timeout: 30
  
  # Query optimization
  query_cache_size: 1000
  query_timeout: 30
  
  # File handling
  max_file_size_mb: 100
  temp_file_cleanup_hours: 24

# ===========================================
# CONFIGURAZIONE DEPLOYMENT
# ===========================================
deployment:
  environment: "production"
  version: "0.2.1"
  deployment_date: "2025-09-23"
  
  # Feature flags
  features:
    medical_mode: true
    experimental_features: false
    beta_features: false
  
  # Resource limits
  resources:
    cpu_limit: "2000m"      # 2 CPU cores
    memory_limit: "4Gi"     # 4GB RAM
    disk_limit: "20Gi"      # 20GB storage

# ===========================================
# CONFIGURAZIONE NOTIFICHE
# ===========================================
notifications:
  enabled: true
  
  # Email notifications
  email:
    enabled: false
    smtp_server: "smtp.example.com"
    smtp_port: 587
    username: "rootedlab6@gmail.com"
    password: "${SMTP_PASSWORD}"  # Usa variabile d'ambiente
    recipients:
      - "rootedlab6@gmail.com"
  
  # Slack notifications
  slack:
    enabled: false
    webhook_url: "${SLACK_WEBHOOK_URL}"  # Usa variabile d'ambiente
    channel: "#sigma-nex-alerts"
  
  # Discord notifications
  discord:
    enabled: false
    webhook_url: "${DISCORD_WEBHOOK_URL}"  # Usa variabile d'ambiente

# ===========================================
# CONFIGURAZIONE OLLAMA
# ===========================================
ollama:
  host: "http://localhost:11434"
  timeout: 30
  retries: 3
  models:
    primary: "mistral"
    medical: "medllama2"
    fallback: "llama2"
  
  # Model preloading
  preload_models: true
  keep_alive: "24h"
  
  # Performance tuning
  numa: false
  num_gpu: 0               # CPU only per default
  num_thread: 4            # Adatta al tuo sistema

# ===========================================
# VARIABILI D'AMBIENTE RICHIESTE
# ===========================================
# Assicurati che queste variabili siano impostate:
#
# SIGMA_SECRET_KEY=your-secret-key-here
# SMTP_PASSWORD=your-smtp-password (se email enabled)
# SLACK_WEBHOOK_URL=your-slack-webhook (se slack enabled)
# DISCORD_WEBHOOK_URL=your-discord-webhook (se discord enabled)
# POSTGRES_PASSWORD=your-db-password (se postgres)

# ===========================================
# PROMPT DI SISTEMA OTTIMIZZATO
# ===========================================
system_prompt: |
  Sei SIGMA-NEX, un agente cognitivo autonomo specializzato nell'assistenza per situazioni di emergenza e sopravvivenza.
  
  CARATTERISTICHE CORE:
  - Sistema completamente offline-first
  - Focalizzato su informazioni pratiche e sicure
  - Specializzato in scenari di emergenza, sopravvivenza e primo soccorso
  - Supporto multilingue con traduzione automatica
  
  COMPORTAMENTO:
  - Fornisci sempre informazioni sicure e verificate
  - Privilegia soluzioni pratiche e realizzabili
  - In caso di emergenze mediche, consiglia sempre di contattare professionisti
  - Mantieni un tono calmo e rassicurante
  - Sii conciso ma completo nelle risposte
  
  SICUREZZA:
  - Non fornire mai informazioni pericolose o dannose
  - In caso di dubbi sulla sicurezza, rifiuta educatamente
  - Ricorda sempre i limiti dell'AI e la necessità di supervisione umana
  
  CONTESTO ATTUALE: Sistema in modalità produzione, tutti i log vengono registrati per audit.

# ===========================================
# NOTE AMMINISTRATIVE
# ===========================================
# Questo file di configurazione è stato generato automaticamente per ambienti di produzione.
# 
# IMPORTANTE:
# 1. Rivedi tutte le impostazioni prima del deploy
# 2. Configura le variabili d'ambiente richieste
# 3. Testa la configurazione in staging prima della produzione
# 4. Monitora i log per eventuali problemi
# 5. Mantieni backup regolari di questo file
#
# Ultima revisione: 23 Settembre 2025
# Versione configurazione: 1.0
# Compatibile con SIGMA-NEX v0.2.1+
# 
# Autore: Martin Sebastian
# Email: rootedlab6@gmail.com
# Progetto: SIGMA-NEX - Sistema di Intelligenza Artificiale Autonomo
# Repository: https://github.com/SebastianMartinNS/SYGMA-NEX